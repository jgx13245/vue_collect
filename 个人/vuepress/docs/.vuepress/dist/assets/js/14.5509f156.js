(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{203:function(a,t,s){"use strict";s.r(t);var e=s(0),r=Object(e.a)({},function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"git"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git","aria-hidden":"true"}},[a._v("#")]),a._v(" GIT")]),a._v(" "),s("h2",{attrs:{id:"克隆远程仓库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#克隆远程仓库","aria-hidden":"true"}},[a._v("#")]),a._v(" 克隆远程仓库")]),a._v(" "),s("p",[a._v("git协议是SSH协议，大部分克隆可以使用这种协议\nhttps协议是口令协议，是针对只开发了https协议的网络")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("$ git clone git@github.com:xxx/xxx\n$ git clone https://github.com/xxx/xxx\n")])])]),s("p",[a._v("https 协议每次下拉代码都需要输入账号密码，很费劲。所以最好使用ssh协议，但是\n使用ssh协议需要配置公钥。")]),a._v(" "),s("p",[a._v("win下找公钥的方法")]),a._v(" "),s("p",[s("a",{attrs:{href:"https://blog.csdn.net/qq_17524035/article/details/70762162",target:"_blank",rel:"noopener noreferrer"}},[a._v("win"),s("OutboundLink")],1)]),a._v(" "),s("p",[a._v("mac下找公钥的方法")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1.")]),a._v(" 打开命令台\n"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2.")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("ssh\n"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3.")]),a._v(" ls "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("l 查看\n"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("4.")]),a._v(" cat id_rsa"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("pub  打开公钥\n")])])]),s("h2",{attrs:{id:"第一次推送内容到master分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第一次推送内容到master分支","aria-hidden":"true"}},[a._v("#")]),a._v(" 第一次推送内容到master分支")]),a._v(" "),s("p",[a._v("-u参数不仅把本地master分支的内容推送到远程仓库的master分支上，而且和远程仓库相关联起来\n随后的远程推送内容，只需要$ git push origin master命令即可")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("$ git push -u origin master\n")])])]),s("h2",{attrs:{id:"创建分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建分支","aria-hidden":"true"}},[a._v("#")]),a._v(" 创建分支")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("$ git branch xxx\n")])])]),s("h2",{attrs:{id:"切换分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#切换分支","aria-hidden":"true"}},[a._v("#")]),a._v(" 切换分支")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("$ git checkout xxx\n")])])]),s("h2",{attrs:{id:"创建并切换分支的简写"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建并切换分支的简写","aria-hidden":"true"}},[a._v("#")]),a._v(" 创建并切换分支的简写")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("$ git checkout -b xxx\n")])])]),s("h2",{attrs:{id:"查看所有分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看所有分支","aria-hidden":"true"}},[a._v("#")]),a._v(" 查看所有分支")]),a._v(" "),s("p",[a._v("带*号的表示当前分支")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("$ git branch\n")])])]),s("h2",{attrs:{id:"查看当前分支修改地方"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看当前分支修改地方","aria-hidden":"true"}},[a._v("#")]),a._v(" 查看当前分支修改地方")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("会显示你修改了什么文件。删除了什么文件。增加了什么文件\n$ git status\n")])])]),s("h2",{attrs:{id:"合并分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#合并分支","aria-hidden":"true"}},[a._v("#")]),a._v(" 合并分支")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("假设你开发的dev分支完成任务了，需要把你的分支合并到主分支上，步骤：\n1.$ git checkout master\n2.$ git merge dev\n同理，A合并B，就主动切换到A分支，A merge B\n\n")])])]),s("h2",{attrs:{id:"删除分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除分支","aria-hidden":"true"}},[a._v("#")]),a._v(" 删除分支")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("$ git branch -d xxx\n")])])]),s("h2",{attrs:{id:"解决冲突"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解决冲突","aria-hidden":"true"}},[a._v("#")]),a._v(" 解决冲突")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("当合并分支出现冲突时，可以利用git status查看冲突的位置\n命令台会显示\n\n推荐使用vs code开发编辑器 ，会把冲突显示在代码上。你选择保留以前的，还是最新的。\n选择完以后  git add .  git commit -m  git push\n")])])]),s("h2",{attrs:{id:"临时接到任务切换分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#临时接到任务切换分支","aria-hidden":"true"}},[a._v("#")]),a._v(" 临时接到任务切换分支")]),a._v(" "),s("p",[a._v("在自己的分支工作做一半，突然接到一个任务bug，需要切换到其他分支工作，该怎样进行合理的git操作")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("git stash命令隐藏当前工作区\ngit checkout -b xx命令创建并切换到bug分支\ngit add xx git commit -m xx修复提交bug分支\ngit checkout master切换到主分支\ngit merge xxx合并bug分支到主分支\ngit branch -d xx删除bug分支\ngit checkout self切换到自己的任务分支\ngit stash pop恢复隐藏的工作现成\n")])])]),s("h2",{attrs:{id:"feature分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#feature分支","aria-hidden":"true"}},[a._v("#")]),a._v(" Feature分支")]),a._v(" "),s("p",[a._v("开发一个新功能mask1，但不保证后续这个新功能需不需要。")]),a._v(" "),s("p",[a._v("git checkout -b mask1创建mask1分支\ngit add xx git commit -m xxx开发完毕并提交到当前mask1分支上\n上级通知，此功能砍掉，不需要了")]),a._v(" "),s("p",[a._v("git checkout dev切换到开发分支")]),a._v(" "),s("p",[a._v("git branch -D mask1删除mask1分支的内容")]),a._v(" "),s("p",[a._v("-d小写的参数d，再删除时会被提示，改分支没有合并，无法删除\n-D大写的参数D，代表强制删除")])])},[],!1,null,null,null);t.default=r.exports}}]);